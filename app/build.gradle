plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    def versionPropsFile = rootProject.file('gradle/version.properties')
    def versionBuild

    if (versionPropsFile.canRead()) {
        def versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD'].toInteger()
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }

    ext.autoIncrementBuildNumber = {
        if (versionPropsFile.canRead()) {
            def versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
            versionProps['VERSION_BUILD'] = versionBuild.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        } else {
            throw new FileNotFoundException("Could not read version.properties!")
        }
    }

    defaultConfig {
        applicationId "com.devries48.elitecommander"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "0.1.0" + versionBuild

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Get or create code here: https://user.frontierstore.net
        buildConfigField "String", "FRONTIER_AUTH_CLIENT_ID", "\"${localProperties.getProperty("frontierclientid")}\""
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            multiDexEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'

    // Firebase
    implementation 'com.google.firebase:firebase-crashlytics-ktx:17.4.1'
    implementation 'com.google.firebase:firebase-analytics:18.0.3'

    // Retrofit
    ext.retrofitVersion = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'com.google.code.gson:gson:2.8.6'

    // Futured donut
    ext.futuredVersion = '2.1.0'
    implementation("app.futured.donut:library:$futuredVersion")
    implementation("app.futured.donut:library-compose:$futuredVersion")

    // Unit & instrumented tests
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.7.1')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.7.1')
    testRuntimeOnly('org.junit.vintage:junit-vintage-engine:5.7.1')

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}